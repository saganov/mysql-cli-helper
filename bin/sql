#!/usr/bin/env bash

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null && pwd )"

_sql()
{
    mysql --defaults-extra-file="$DEFAULTS_EXTRA_FILE" "$@"
}

sql()
{
   # _sql --auto-vertical-output --table \
    _sql --table << eof
$@
eof
}

dump()
{
    mysqldump --defaults-extra-file="$DEFAULTS_EXTRA_FILE"
}

recreate()
{
    local table=$1; shift
    _sql << eof
DROP DATABASE IF EXISTS $table;
CREATE DATABASE $table;
eof
}

#######################################
# Check if the Host of current environment is local
# Globals:
#   DEFAULTS_EXTRA_FILE
# Arguments:
#   None
# Returns:
#   0 - if configured environment Host is local
#   1 - if configured environment Host is remote
#######################################
is_host_local()
{
    grep -q host= "$DEFAULTS_EXTRA_FILE" || return 0
    grep -q -E "host=\"(localhost|127\.0\.0\.1)\"" "$DEFAULTS_EXTRA_FILE" && return 0
    return 1
}

#######################################
# Print project's working directory
# Globals:
#   PWD
# Arguments:
#   None
# Returns:
#   None
#######################################
workdir()
{
    echo $PWD/bin/db
}

#######################################
# Print filename of environemt configuration
# Globals:
#   None
# Arguments:
#   env - name of environment
# Returns:
#   None
#######################################
mysql_config()
{
    env=${1:-local}
    echo $(workdir)/.my.$env.cnf
}

environment()
{
    if [ $# -eq 0 ]; then
        for config in $(ls -1 $(workdir)/.my.*.cnf); do
            basename $config .cnf | cut -c 5-
        done
    else
        env=$1
        $DIR/env $(mysql_config $env)
    fi
}

install()
{
    env=${1:-local}
    $DIR/env $(mysql_config $env)
    $DIR/shortcut $(workdir)/$env
}

command=$1; shift
env=${env:-local}
if [ ! -r "$(mysql_config $env)" ]; then
   install $env
   [ "$command" == 'install' -o "$command" == 'env' ] && exit 0
fi

DEFAULTS_EXTRA_FILE="$(mysql_config $env)"
[ -z "$command" ] && _sql && exit 0
case "$command" in
    sql)
        sql "$@"
        ;;
    all)
        sql "SELECT * FROM $1\G"
        ;;
    tables)
        sql "SHOW TABLES"
        ;;
    count)
        sql "SELECT COUNT(*) FROM $1"
        ;;
    dump)
        dump
        ;;
    recreate)
        if is_host_local ; then
            export $(grep database= "$DEFAULTS_EXTRA_FILE")
            database="${database%\"}"
            database="${database#\"}"
            recreate "$database"
        else
            echo "The operation is only for local DB"
            exit 1
        fi
        ;;
    env)
        environment $@
        ;;
    install)
        install $@
        ;;
    *)
        sql "$command $@"
esac

